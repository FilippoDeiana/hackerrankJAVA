
//Java Primality Test
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

    String n = bufferedReader.readLine();
    BigInteger big = new BigInteger(n);
   
    if(big.isProbablePrime(1)){
        System.out.println("prime");
    }
    else{
        System.out.println("not prime");
    }

    bufferedReader.close();
    }
}


//Java BigInteger
import java.io.*;
import java.util.*;
import java.math.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        BigInteger big = scan.nextBigInteger();
        BigInteger big2 = scan.nextBigInteger();
        
        System.out.println(big.add(big2));
        System.out.println(big.multiply(big2));
    }
}




----------------------------------------------------------


//Java BigDecimal //unfinished
import java.math.BigDecimal;
import java.util.*;
class Solution{
    public static void main(String []args){
        //Input
        Scanner sc= new Scanner(System.in);
        int n=sc.nextInt();
        String []s=new String[n+2];
        for(int i=0;i<n;i++){
            s[i]=sc.next();
        }
        sc.close();


 BigDecimal [] big = new BigDecimal[n];
        String temp = "";
        
        for(int i=0;i<n;i++){
            if (s[i] != null)
            big[i] = new BigDecimal(s[i]);
        }
        
        for(int i=0;i<n-1;i++){
           for(int j=i+1;j<n;j++){
      
        if (big[i].compareTo(big[j]) < 0){
                temp = s[j];
                s[j] = s[i];
                s[i] = temp; 

        }               
      
     }
     
   }
       
       
        

        //Output
        for(int i=0;i<n;i++)
        {
            System.out.println(s[i]);
        }
    }
}
