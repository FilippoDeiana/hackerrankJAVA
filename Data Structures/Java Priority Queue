import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.*;


 
 class Student{
     
     int id;
     String name;
     double cgpa;
     
     Student (int id, String name, double cgpa){         
         this.id = id;
         this.name = name;
         this.cgpa = cgpa;
     }
     
     public int getId(){
         return this.id;
     }
     
     public String getName(){
         return this.name;
     }
     
     public double getCgpa(){
         return this.cgpa;
     }
 }
 
 class Priorities{
     
     public List<Student> getStudents(List<String> events) {
   
               PriorityQueue<Student> list = new PriorityQueue<>(
                   Comparator.comparingDouble(Student::getCgpa).reversed().thenComparing(Student::getName).thenComparingInt(Student::getId));

        
       List <Student> st = new ArrayList <Student>();

         for (int i=0; i<events.size();i++){
             
           String[] temp = events.get(i).split(" ");
           
            if (temp[0].equals("ENTER")) {
                list.add(new Student(Integer.valueOf(temp[3]),temp[1], Double.valueOf(temp[2])));
            }
            
             if (temp[0].equals("SERVED")) {
                list.poll();
            }
         }
         
     
       while (!list.isEmpty()) {
         st.add(list.poll());
    }
         
      
        return st;
     
 } 
 }
 


public class Solution {
    private final static Scanner scan = new Scanner(System.in);
    private final static Priorities priorities = new Priorities();
    
    public static void main(String[] args) {
        int totalEvents = Integer.parseInt(scan.nextLine());    
        List<String> events = new ArrayList<>();
        
        while (totalEvents-- != 0) {
            String event = scan.nextLine();
            events.add(event);
        }
        
        List<Student> students = priorities.getStudents(events);
        
        if (students.isEmpty()) {
            System.out.println("EMPTY");
        } else {
            for (Student st: students) {
                System.out.println(st.getName());
            }
        }
    }
}
