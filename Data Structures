
//Java 1D Array
import java.util.*;

public class Solution {

    public static void main(String[] args) {
	   
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
int[] a = new int[n];


for (int i = 0; i<a.length; i++){
    a[i] = scan.nextInt();
}


        scan.close();

        // Prints each sequential element in array a
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}


---------------------------------------------------------------------


//Java Subarray
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner (System.in);
        int arrLength = sc.nextInt();
        int count=0;
        int[] array = new int[arrLength]; 
        
        
        for (int i = 0 ; i < arrLength; i++){
            int items = sc.nextInt();
            array[i] = items;
        } 
         
         
            for(int i = 0 ; i < arrLength; i++){
               int sum = 0;
                                     //System.out.println(i);

                for(int j = i; j < arrLength; j++){
                    sum += array[j];
                                                       //  System.out.println(j);

                if (sum < 0){
                    count++;
                                    
                }
            }
        }
            
                      System.out.println(count);

    
    }
}



---------------------------------------------------------------------


//Java ArrayList

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
       
       
       Scanner scan = new Scanner(System.in);

 ArrayList<ArrayList> array = new ArrayList<ArrayList>();
       
       int arrLength = scan.nextInt();
     

    for (int i = 0; i < arrLength; i++){ 
          int arrLength2 = scan.nextInt();
        ArrayList<Integer> arr = new ArrayList<Integer>(); 
        for (int j = 0; j < arrLength2; j++){
            int items = scan.nextInt();
            arr.add(items);
            //System.out.println(arr);
            
    } 
            array.add(arr);
    }
    
    int qLength = scan.nextInt();
   
    
    for(int i = 0; i < qLength; i++ ){ 
        int x = scan.nextInt();
        int y = scan.nextInt();
        try {
            System.out.println(array.get(x-1).get(y-1)); 
        } catch (Exception e){
             System.out.println("ERROR!"); 

        }
    }
       
       
     
       
    }
}



----------------------------------------------------------

// Java 1d Array (Part 2)


import java.util.*;

public class Solution {

    public static boolean canWin(int leap, int[] game, int i) {
        // Return true if you can win the game; otherwise, return false.
         
             if(i >= game.length){
                return true;
            }
             if(i < 0 || game[i] == 1){ 
                return false; 
                }
            
             game[i] = 1;

        
        return canWin(leap, game, i + leap) ||  canWin(leap, game, i + 1) ||  
         canWin(leap, game, i - 1);
    }
    

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int q = scan.nextInt();
        while (q-- > 0) {
            int n = scan.nextInt();
            int leap = scan.nextInt();
            
            int[] game = new int[n];
            for (int i = 0; i < n; i++) {
                game[i] = scan.nextInt();
            }

            System.out.println( (canWin(leap, game, 0)) ? "YES" : "NO" );
        }
        scan.close();
    }
}







-----------------------------------




//Java 2D Array

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        List<List<Integer>> arr = new ArrayList<>();

        IntStream.range(0, 6).forEach(i -> {
            try {
                arr.add(
                    Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                        .map(Integer::parseInt)
                        .collect(toList())
                );
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });
        
    
        int sum= 0;
        int max = -63;
     
        for (int i = 0; i < arr.size() - 2; i++){
            for (int j = 0; j < arr.size() - 2; j++){
                
                sum = arr.get(i).get(j) +  arr.get(i).get(j + 1) + arr.get(i).get(j + 2) 
                + arr.get(i + 1).get(j + 1) +
                arr.get(i + 2).get(j) +   arr.get(i + 2).get(j + 1) +  arr.get(i + 2).get(j + 2) ;
                          
                          if (sum > max){
                              max = sum;
                          }
            }
        }
           System.out.println(max);
        bufferedReader.close();
    }
}









-------------------------------------------


// Java List

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
       
       Scanner sc = new Scanner(System.in);
       
       ArrayList<Integer> list = new ArrayList<Integer>();
       int arrayLength = sc.nextInt();
       
     for (int i = 0 ; i < arrayLength; i++){
           list.add(sc.nextInt());    
       }
       
       int queries = sc.nextInt();
       
         for (int i = 0 ; i < queries; i++){
             sc.nextLine();
             String command = sc.nextLine();
           
           if ("Insert".equals(command)){ 
               int x = sc.nextInt();
               int y = sc.nextInt();
              list.add(x, y);
               
           } 
            if ("Delete".equals(command)){
                int x = sc.nextInt();

               list.remove(x);
               
           }
       }
       
       
       for (int x : list) {
           System.out.print(x + " ");
       }
         
       
    }
}


-------------------------------------------------------------------



//Java map
import java.util.*;
import java.io.*;

class Solution{
	public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        
        HashMap<String, Integer> book = new HashMap<String, Integer>();

		
		int n=in.nextInt();
		in.nextLine();
        
		for(int i=0;i<n;i++)
		{
			String name=in.nextLine();
			int phone=in.nextInt();
            
            book.put(name, phone);
            
			in.nextLine();
		}
        
        
		while(in.hasNext()){
			String s=in.nextLine().toLowerCase().trim();
            
                if (book.containsKey(s)){
                    System.out.println(s + "=" + book.get(s));
                } else {
                    System.out.println("Not found");
                }
            
		} 
	}
}




------------------------------------------


//Java Hashset
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

 public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int t = s.nextInt();
        String [] pair_left = new String[t];
        String [] pair_right = new String[t];
        
        for (int i = 0; i < t; i++) {
            pair_left[i] = s.next();
            pair_right[i] = s.next();
        }

  HashSet<String> result = new HashSet<String>();

            for (int j = 0; j < t; j++) {
                
                result.add(pair_left[j] + " " + pair_right[j]);
                System.out.println(result.size());
        }
    
   }
}



----------------------------------------




//Java Generics
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Integer[] intArr = {1,2,3};
        String[] stringArr = {"Hello", "World"};
        
        
        printArray(intArr);
        printArray(stringArr);
    }
    
     public static <T> void printArray(T[] i) {
        
    for (T t : i) {
        System.out.println(t);
    }
        
    }
}




------------------------------------




//Java Comparator
import java.util.*;

class Checker implements Comparator<Player>{
    
    @Override
    public int compare(Player firstPlayer, Player secondPlayer) {
       int score = Integer.compare( secondPlayer.score, firstPlayer.score);
       int name = firstPlayer.name.compareTo(secondPlayer.name) ;
       return (score == 0) ?  name : score;
    }


    
}

class Player{
    String name;
    int score;
    
    Player(String name, int score){
        this.name = name;
        this.score = score;
    }
}

class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();

        Player[] player = new Player[n];
        Checker checker = new Checker();
        
        for(int i = 0; i < n; i++){
            player[i] = new Player(scan.next(), scan.nextInt());
        }
        scan.close();

        Arrays.sort(player, checker);
        for(int i = 0; i < player.length; i++){
            System.out.printf("%s %s\n", player[i].name, player[i].score);
        }
    }
}


----------------------------------------------------------


//Java Sort

import java.util.*;

class Student{
	private int id;
	private String fname;
	private double cgpa;
	public Student(int id, String fname, double cgpa) {
		super();
		this.id = id;
		this.fname = fname;
		this.cgpa = cgpa;
	}
	public int getId() {
		return id;
	}
	public String getFname() {
		return fname;
	}
	public double getCgpa() {
		return cgpa;
	}
}


class Checker implements Comparator<Student>{
    
    
      @Override
    public int compare(Student s1, Student s2) {
      
      int cgpa = Double.compare(s2.getCgpa(), s1.getCgpa());
      int name = s1.getFname().compareTo(s2.getFname());
      int id = Integer.compare(s1.getId(), s2.getId());
      
      if (cgpa == 0){
          return name;
      } 
       if (name == 0 && cgpa == 0){
          return id;
      } 
      
      return cgpa;
    }
    
    
}


public class Solution
{
	public static void main(String[] args){
		Scanner in = new Scanner(System.in);
		int testCases = Integer.parseInt(in.nextLine());
		
		List<Student> studentList = new ArrayList<Student>();
        Checker checker = new Checker();
        
        
		while(testCases>0){
			int id = in.nextInt();
			String fname = in.next();
			double cgpa = in.nextDouble();
			
			Student st = new Student(id, fname, cgpa);
			studentList.add(st);
			
			testCases--;
		}
      
      Collections.sort(studentList, checker);
      	for(Student st: studentList){
			System.out.println(st.getFname());
		}
	}
}
