//Java Stdin and Stdout I
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int a = scan.nextInt();
        int b = scan.nextInt();
        int c = scan.nextInt();

        System.out.println(a);
        System.out.println(b);
       System.out.println(c);
    }
}

---------------------------------------------------------------------
//Java If-Else
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        
        int N = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
        
        if (N % 2 != 0){
            System.out.println("Weird");
        } 
        else if (N % 2 == 0 && N >= 2 &&  N <= 5){
            System.out.println("Not Weird");
        }
        else if (N % 2 == 0 && N >= 6 &&  N <= 20){
            System.out.println("Weird");
        }
        else if (N % 2 == 0 && N > 20) {
            System.out.println("Not Weird");
        }
        
        scanner.close();
    }
    
    
    
}


---------------------------------------------------------------------

//Java Stdin and Stdout II
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
        
     Scanner scan = new Scanner(System.in);
        int i = scan.nextInt();
        double d = scan.nextDouble();
        scan.nextLine();
        String s = scan.nextLine();
        scan.close();
        
        
        System.out.println("String: " + s);
        System.out.println("Double: " + d);
        System.out.println("Int: " + i);
    }
}



---------------------------------------------------------------------

//Java Output Formatting
import java.util.Scanner;

public class Solution {

    public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            System.out.println("================================");
            for(int i=0;i<3;i++)
            {
                String s1=sc.next();
                int x=sc.nextInt();
                //Complete this line
                 System.out.printf("%-15s%0,3d%n" , s1 , x);
            }
            System.out.println("================================");

    }
}


---------------------------------------------------------------------

//Java Loops I
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(bufferedReader.readLine().trim());
        int sum = 0;

         for (int i = 1; i <= 10; i++){
             sum+= N;
             System.out.println(N + " x " + i + " = " + sum);
         }    

        bufferedReader.close();
    }
}


---------------------------------------------------------------------

//Java Loops II
import java.util.*;
import java.io.*;

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int t=in.nextInt();
        for(int i=0;i<t;i++){
            
            int a = in.nextInt();
            int b = in.nextInt();
            int n = in.nextInt();
           int temp = a;
           
            for(int j=0;j<n;j++)
            {
                temp+=(Math.pow(2,j)*b);
                System.out.print(temp+" ");
            }
            System.out.println();
        }
        
        in.close();
    }
}

---------------------------------------------------------------------


//Java Datatypes
import java.util.*;
import java.io.*;



class Solution{
    public static void main(String []argh)
    {

        Scanner sc = new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++)
        {
            try
            {
                long x=sc.nextLong();
                System.out.println(x + " can be fitted in:");
                
                if (x >= -128 && x <= 127 ){
                    System.out.println("* byte");
                     }
                     
                if (x >=- 32768 && x <= 32767){
                     System.out.println("* short");
                    }
                 
                if (x >= -2147483648 && x <= 2147483647){
                      System.out.println("* int");
                    }
                    
                if (x >= -9223372036854775808L && x <= 9223372036854775807L){
                      System.out.println("* long");
                    }
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }
    }
}


---------------------------------------------------------------------

//Java End-of-file
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
        Scanner scan = new Scanner(System.in);
        int temp= 0;
       
        while (scan.hasNext()) {
            String s = scan.nextLine();
            System.out.println(++temp + " " + s);
            
        }
        
    }
}



---------------------------------------------------------------------

//Java Static Initializer Block
import java.io.*;
import java.util.*;

public class Solution {
    
    static int H;
    static int B;
    static int sum;

    public static void main(String[] args) {
        
        Scanner scan = new Scanner(System.in);
        H = scan.nextInt();
        B = scan.nextInt();
        
        try {
            if (H <= 0 || B <= 0){
             throw new Exception();
             
        } else {
            sum = H * B;
            System.out.println(sum);
        }
        
        } catch (Exception e){
            System.out.println("java.lang.Exception: Breadth and height must be positive");
        }
        
        
    }
}



---------------------------------------------------------------------

//Java Int to String
String s = n + "";



---------------------------------------------------------------------


//Java Currency Formatter
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double payment = scanner.nextDouble();
        scanner.close();

        // Write your code here.
      
        NumberFormat n = NumberFormat.getCurrencyInstance(Locale.US);
        String us = n.format(payment);
        NumberFormat num1 = NumberFormat.getCurrencyInstance(new Locale("en", "IN"));
        String india = num1.format(payment);
        NumberFormat num2 = NumberFormat.getCurrencyInstance(Locale.CHINA);
        String china = num2.format(payment);
        NumberFormat num3 = NumberFormat.getCurrencyInstance(Locale.FRANCE);
        String france = num3.format(payment);

        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);
    }
}



---------------------------------------------------------------------
   
//Java Strings Introduction
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        String B=sc.next();
        
        
        System.out.println(A.length() + B.length());
   
        if(A.compareTo(B) > 0){
        System.out.println("Yes");
         } else {
        System.out.println("No");
         } 

    A = (A.substring(0,1)).toUpperCase() + A.substring(1);       
    B = (B.substring(0,1)).toUpperCase() + B.substring(1);
    System.out.println(A + " " + B);
        
    }
}


---------------------------------------------------------------------

//Java Substring
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String S = in.next();
        int start = in.nextInt();
        int end = in.nextInt();
        
    System.out.println(S.substring(start, end));
    }
}



---------------------------------------------------------------------

//Java Substring Comparisons
import java.util.Scanner;

public class Solution {

    public static String getSmallestAndLargest(String s, int k) {
        String smallest = s.substring(0, k);
          String largest = s.substring(0, k);
    
    for (int i = 0; i <= s.length() - k; i++) {
        String substring = s.substring(i, i + k);
        if (substring.compareTo(smallest) < 0) {
            smallest = substring;
        }
        if (substring.compareTo(largest) > 0) {
            largest = substring;
        }
    }
    return smallest + "\n" + largest;
    }


    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.next();
        int k = scan.nextInt();
        scan.close();
      
        System.out.println(getSmallestAndLargest(s, k));
    }
}

---------------------------------------------------------------------


//Java String Reverse
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
       
       for (int i = 0; i<A.length(); i++){
           if(A.charAt(A.length() -i -1) == A.charAt(i)){
            System.out.println("Yes");
            break;
           }else {
               System.out.println("No");
                break;
           }
       }
        
    }
}


---------------------------------------------------------------------

//Java Anagrams
import java.util.Scanner;

public class Solution {

    static boolean isAnagram(String a, String b) {
        
        char[] arr1 = a.toLowerCase().trim().toCharArray();
        char[] arr2 = b.toLowerCase().trim().toCharArray();
        
        for (int i = 0; i < arr1.length; i++) {
        for (int j = i + 1; j < arr1.length; j++) {
            char temp = 0;
            if (arr1[i] > arr1[j]) {
                temp = arr1[i];
                arr1[i] = arr1[j];
                arr1[j] = temp;
            }
        }
    }
    
     for (int i = 0; i < arr2.length; i++) {
        for (int j = i + 1; j < arr2.length; j++) {
            char temp = 0;
            if (arr2[i] > arr2[j]) {
                temp = arr2[i];
                arr2[i] = arr2[j];
                arr2[j] = temp;
            }
        }
    }
    
    String a1 = new String(arr1);
    String a2 = new String(arr2);
    
    if (a1.equals(a2)){
        return true;
    }

        return false;
    }

  public static void main(String[] args) {
    
        Scanner scan = new Scanner(System.in);
        String a = scan.next();
        String b = scan.next();
        scan.close();
        boolean ret = isAnagram(a, b);
        System.out.println( (ret) ? "Anagrams" : "Not Anagrams" );
    }
}

---------------------------------------------------------------------


//Java String Tokens
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        String s = scan.nextLine();
        String[] arr;
        
        s = s.trim();
        
        if (s.length() == 0){
             System.out.println(0);
        }else{ 
            arr = s.replaceAll("['!?,._@ ]+", " ").split("\\s+"); 
            System.out.println(arr.length); 
            for (int i = 0; i < arr.length; i++) {
                System.out.println(arr[i]); 
            }
            
         }

             scan.close();
    }
   
 }
 
 
 ---------------------------------------------------------------------

//Pattern Syntax Checker
import java.util.Scanner;
import java.util.regex.*;

public class Solution
{
    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int testCases = Integer.parseInt(in.nextLine());
        while(testCases>0 && in.hasNext()){
            String pattern = in.nextLine();
            try{
                Pattern p = Pattern.compile(pattern);
                System.out.println("Valid");
            }catch (Exception e){
                System.out.println("Invalid");
            }
            
        }
    }
}


---------------------------------------------------------------------

//Java Regex

import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;

class Solution{

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String IP = in.next();
            System.out.println(IP.matches(new MyRegex().pattern));
        }

    }
}

class MyRegex {

String regex = "(([01]?\\d{1,2})|(2[0-4]\\d)|(25[0-5]))";
String pattern = String.format("%s.%s.%s.%s", regex, regex, regex, regex);

}


---------------------------------------------------------------------

//Java Regex 2 - Duplicate Words
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class DuplicateWords {

    public static void main(String[] args) {

        String regex = "\\b(\\w+)(\\s+\\1\\b)+";
        Pattern p = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);

        Scanner in = new Scanner(System.in);
        int numSentences = Integer.parseInt(in.nextLine());
        
        while (numSentences-- > 0) {
            String input = in.nextLine();
            
            Matcher m = p.matcher(input);
            
            // Check for subsequences of input that match the compiled pattern
            while (m.find()) {
                input = input.replaceAll(m.group(), m.group(1));
            }
            
            // Prints the modified sentence.
            System.out.println(input);
        }
        
        in.close();
    }
}

---------------------------------------------------------------------


//Valid Username Regular Expression
import java.util.Scanner;
class UsernameValidator {
    /*
     * Write regular expression here.
     */
    public static final String regularExpression = "[a-zA-Z]\\w{7,29}";
}


public class Solution {
    private static final Scanner scan = new Scanner(System.in);
    
    public static void main(String[] args) {
        int n = Integer.parseInt(scan.nextLine());
        while (n-- != 0) {
            String userName = scan.nextLine();

            if (userName.matches(UsernameValidator.regularExpression)) {
                System.out.println("Valid");
            } else {
                System.out.println("Invalid");
            }           
        }
    }
}

---------------------------------------------------------------------

//Java Primality Test
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

    String n = bufferedReader.readLine();
    BigInteger big = new BigInteger(n);
   
    if(big.isProbablePrime(1)){
        System.out.println("prime");
    }
    else{
        System.out.println("not prime");
    }

    bufferedReader.close();
    }
}


//Java BigInteger
import java.io.*;
import java.util.*;
import java.math.*;

public class Solution {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        BigInteger big = scan.nextBigInteger();
        BigInteger big2 = scan.nextBigInteger();
        
        System.out.println(big.add(big2));
        System.out.println(big.multiply(big2));
    }
}

---------------------------------------------------------------------

//Java 1D Array
import java.util.*;

public class Solution {

    public static void main(String[] args) {
	   
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
int[] a = new int[n];


for (int i = 0; i<a.length; i++){
    a[i] = scan.nextInt();
}


        scan.close();

        // Prints each sequential element in array a
        for (int i = 0; i < a.length; i++) {
            System.out.println(a[i]);
        }
    }
}

---------------------------------------------------------------------


//Java BigDecimal
import java.math.BigDecimal;
import java.util.*;
class Solution{
    public static void main(String []args){
        //Input
        Scanner sc= new Scanner(System.in);
        int n=sc.nextInt();
        String []s=new String[n+2];
        for(int i=0;i<n;i++){
            s[i]=sc.next();
        }
        sc.close();

        
BigDecimal [] big = new BigDecimal[n];
BigDecimal temp = new BigDecimal(0);
        
        for(int i=0;i<n;i++){
            if (s[i] != null)
            big[i] = new BigDecimal(s[i]);
            //System.out.println(big[i] + "a1");
            
     
        }
        
        for(int i=0;i<n-1;i++){
           for(int j=i+1;j<n;j++){
         //  
        
        if (big[i].compareTo(big[j]) == -1){
                temp = big[j];
                big[j] = big[i];
                big[i] = temp;
               s[i] = big[i].toString();
        }
     }
        }
       
        

        //Output
        for(int i=0;i<n;i++)
        {
            System.out.println(s[i]);
        }
    }
}
